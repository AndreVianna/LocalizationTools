// <auto-generated />
using LocalizationProvider.PostgreSql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LocalizationProvider.PostgreSql.Migrations
{
    [DbContext(typeof(ResourceDbContext))]
    partial class ResourceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LocalizationProvider.PostgreSql.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("Bytes")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("Culture")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ResourceId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId", "Culture", "ResourceId")
                        .IsUnique();

                    b.ToTable("Images");
                });

            modelBuilder.Entity("LocalizationProvider.PostgreSql.Models.List", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Culture")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ResourceId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId", "Culture", "ResourceId")
                        .IsUnique();

                    b.ToTable("Lists");
                });

            modelBuilder.Entity("LocalizationProvider.PostgreSql.Models.ListOption", b =>
                {
                    b.Property<int>("ListId")
                        .HasColumnType("integer");

                    b.Property<int>("OptionId")
                        .HasColumnType("integer");

                    b.Property<int>("Index")
                        .HasColumnType("integer");

                    b.HasKey("ListId", "OptionId");

                    b.HasIndex("OptionId");

                    b.HasIndex("ListId", "Index")
                        .IsUnique();

                    b.ToTable("ListOptions");
                });

            modelBuilder.Entity("LocalizationProvider.PostgreSql.Models.Text", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Culture")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ResourceId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId", "Culture", "ResourceId")
                        .IsUnique();

                    b.ToTable("Texts");
                });

            modelBuilder.Entity("LocalizationProvider.PostgreSql.Models.ListOption", b =>
                {
                    b.HasOne("LocalizationProvider.PostgreSql.Models.List", "List")
                        .WithMany("ListOptions")
                        .HasForeignKey("ListId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LocalizationProvider.PostgreSql.Models.Text", "Option")
                        .WithMany("OptionList")
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("List");

                    b.Navigation("Option");
                });

            modelBuilder.Entity("LocalizationProvider.PostgreSql.Models.List", b =>
                {
                    b.Navigation("ListOptions");
                });

            modelBuilder.Entity("LocalizationProvider.PostgreSql.Models.Text", b =>
                {
                    b.Navigation("OptionList");
                });
#pragma warning restore 612, 618
        }
    }
}
